INCLUDE library.base  # vložení souboru. jakoby spojí soubory. Zatím lze pouze psát v hlavním souboru, momnetálně tento obsahuje jen jednu proměnou

MACRO CALL:  # definice makra CALL , CALL se všude v kódu nahradí tímto
	PROG_NEXT RTRN #nasatvení navratu na na za funkcí
	$0 PROG_POS #zavolání funkce. $0 je prní parametr CALL
MACRO_END	# konec makra
 


DATA:
	TIM 0	#proměná
	RTRN 0  #proměná do které uložíme kam se vracíme
	POLE  1 #první položka pole. Proměné jou do paměti zapisovány za sebou
	- 2		#další položka pole. Tudíž víme že tato bude hned za začátkem
	- 3		#další položka pole. Compiler - nepovažuje za opetovnou deklarace proměné
	- 4
	- 5
CODE:

	VAL_NULL  VAL_NULL <-LOOP #zbytečný řádek, nic nedělá protože zapíše z 0 do 0 tudíš se nic nezmění

	CALL FUNKCE # použití makra na zavolání funkce

	TIM MONITOR }-DESTINACE # všude v kódu se nahradí "DESTINACE" za dresu registru MONITOR

	CODE PROG_POS # CODE je ukazovátko na začátek programu (prví CODE:)

	VAL_NULL VAL_NULL <-FUNKCE
	 	TIM ADD_B
		VAL_ONE ADD_A 
		ADD_OUT TIM
	RTRN PROG_POS    #vrácení se na místo odkud jsme funkci volali
FILE_END:		#Toto je dobrovolé, kompilátor si toto sám umí doplnit